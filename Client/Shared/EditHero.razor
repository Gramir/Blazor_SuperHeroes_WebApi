@inject IHeroService HeroService
@if (hero.Id == 0)
{
<h3>Create a new hero</h3>
}
else
{
<h3>Edit @hero.Name</h3>
}
<EditForm Model="hero" OnSubmit="CheckSubmit">

    <div class="form-group"><label>Name</label><InputText @bind-Value="hero.Name" class="form-control"></InputText></div>
    <div class="form-group">
        <label>Comic</label><br />
        <InputRadioGroup @bind-Value="comic" class="form-control">
            @foreach (var com in HeroService.Comics)
            {
                <InputRadio Value="@com.Id" /> <span style="padding-left: 5px;">@com.Name</span> <br />
            }

        </InputRadioGroup>

    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {

    public int comic { get; set; } = 0;
    [Parameter]
    public Hero hero { get; set; } = new Hero();

    protected override async Task OnParametersSetAsync()
    {
        await HeroService.GetComics();
        comic = hero.Comic.Id;
    }

   async void CheckSubmit()
    {
        hero.Comic = HeroService.Comics.FirstOrDefault(c => c.Id == comic);
        if(hero.Id == 0)
        {
          await HeroService.PostHero(hero);
        }
         else
        {
          await HeroService.UpdateHero(hero, hero.Id);
        }
        hero = new Hero();

    }
}
